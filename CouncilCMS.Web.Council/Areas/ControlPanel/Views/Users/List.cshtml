@model CmsUserList

@{
    ViewBag.Title = "User";
    Layout = "~/Areas/ControlPanel/Views/Shared/_Layout.cshtml";
    var filterState = Request.Cookies["filter_states"] != null ? Request.Cookies["filter_states"].Values["users"] : "0";
}

<div class="page-title">
    <div class="pull-right">
        <a href="#" class="nav-link btn btn-primary" data-action="edit" data-id="0">
            <i class="fa fa-fw fa-plus"></i>
            <span>
                @Locals.Add
            </span>
        </a>
    </div>
    <h1>
        Користувачі
    </h1>
</div>

<div class="card">
    <div class="list-nav">
        <div class="pull-right">
            <ul class="nav nav-pills">
                <li class="dropdown">
                    <a href="#" data-toggle="dropdown" id="ddlSortBy">
                        <i class="fa fa-fw fa-sort"></i>
                        <span></span>
                    </a>
                    <ul class="dropdown-menu dropdown-menu-right">
                        <li>
                            <a href="#" class="nav-link" data-action="list" data-sort-by="RegisterDate">за датою реєстрації</a>
                        </li>
                        <li>
                            <a href="#" class="nav-link" data-action="list" data-sort-by="Name">за ім'ям</a>
                        </li>
                        <li>
                            <a href="#" class="nav-link" data-action="list" data-sort-by="Email">за email</a>
                        </li>                        
                    </ul>
                </li>
                <li>
                    <a href="#" class="nav-link" data-sort-dir="@Model.SortDirection">
                        <i class="fa fa-fw fa-sort-amount-@(Model.SortDirection > 0 ? "desc" : "asc")"></i>
                    </a>
                </li>
                <li>
                    <a href="#" class="btn btn-link" id="btnShowFilter">
                        <i class="fa fa-fw fa-filter"></i>
                    </a>
                </li>
            </ul>
        </div>
        <ul class="nav nav-pills text-uppercase" role="tablist">
            <li class="@(Model.UserState == 1 ? "active" : null)">
                <a href="#divList" class="nav-link" data-toggle="pill" data-action="list" data-item-state="1">
                    Активні
                </a>
            </li>
            <li class="@(Model.UserState == 2 ? "active" : null)">
                <a href="#divList" class="nav-link" data-toggle="pill" data-action="list" data-item-state="2">
                    Заблоковані
                </a>
            </li>
            @*<li class="@(Model.ItemState == 3 ? "active" : null)">
                <a href="#divList" class="nav-link" data-toggle="pill" data-action="list" data-item-state="3">
                    Видалені
                </a>
            </li>*@
            <li class="@(Model.UserState == 0 ? "active" : null)">
                <a href="#divList" class="nav-link" data-toggle="pill" data-action="list" data-item-state="0">
                    Всі
                </a>
            </li>
        </ul>
    </div>

    <div class="filter @(filterState == "1" ? "expanded" : "")" id="divFilter">
        @using (Ajax.BeginForm(ajaxOptions: new AjaxOptions()
        {
            Url = "/uk/controlpanel/users/list?ajaxmode=true",
            HttpMethod = "get",
            OnBegin = "bsAdmin.startProcessing(); $('#hPage').val(1); window.createListState();",
            OnComplete = " bsAdmin.endProcessing(); window.pushState(); coreUtils.enableButton($(this).find('button[type=submit]'));",
            UpdateTargetId = "divList",
            InsertionMode = InsertionMode.Replace,
        }))
        {
            @Html.HiddenFor(x => x.Page, new { @class = "filter-input", id = "hPage", data_default_val = 1 })
            @Html.HiddenFor(x => x.UserState, new { @class = "filter-input", id = "hItemState", data_default_val = 1 })
            @Html.HiddenFor(x => x.SortBy, new { @class = "filter-input", id = "hSortBy", data_default_val = "PublishDate" })
            @Html.HiddenFor(x => x.SortDirection, new { @class = "filter-input", id = "hSortDirection", data_default_val = "1" })

            <div class="form" id="formFilter" style="display:@(filterState == "1" ? "block" : "none")">
                <div class="row">
                    <div class="col-sm-10">
                        <div class="row">
                            <div class="col-sm-5">
                                @Html.SimpleTextBoxFor(x => x.Query, "Ім'я або email", new { @class = "form-control filter-input" })
                            </div>
                            <div class="col-sm-3">
                                @Html.SimpleDropDownListFor(x => x.Role, Model.Roles, "Роль", new { @class = "form-control bs-select filter-input" })
                            </div>
                            <div class="col-sm-4">
                                @Html.SimpleTextBoxFor(x => x.DateRange, "Період реєстрації", new { @class = "form-control bs-daterangepicker filter-input" })
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-1">
                        <div class="form-group">
                            <label class="control-label">&nbsp;</label>
                            <button type="submit" class="btn btn-primary btn-block" id="btnFiter" title="застосувати фільтр">
                                <i class="fa fa-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-sm-1">
                        <div class="form-group">
                            <label class="control-label">&nbsp;</label>
                            <button type="button" class="btn btn-default btn-block" id="btnClearFilter" data-onclear="window.createListState();window.getList();" title="скинути фільтр">
                                <i class="fa fa-times"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="tab-content">
        <div class="tab-pane active" id="divList"></div>
    </div>
</div>

<div id="divEdit" class="modal modal-800 fade" tabindex="-1" data-width="800" style="display:none;">
    <div class="modal-body" id="divEditForm"></div>
</div>


@section Scripts {
    <script>
        $(function () {
            window.divList = $("#divList");
            window.divEdit = $("#divEdit");
            window.modalManager = $("body").data("modalmanager");

            window.getList = function (pushState) {
                pushState = pushState || true;

                bsAdmin.startProcessing();

                $.get("/uk/controlpanel/users/list?ajaxmode=true", window.currentState, function (r) {
                    window.divList.html(r);
                    bsAdmin.endProcessing();

                    if (pushState)
                        window.pushState();

                    $("#ddlSortBy").find("span").text($("a[data-sort-by='" + window.currentState.sortby + "']").text());
                });
            };

            window.getEdit = function (pushState) {
                pushState = pushState || true;

                $('body').modalmanager('loading');

                window.divEdit.find(".modal-body").load("/uk/controlpanel/users/getform", window.currentState, function () {
                    window.divEdit.modal({ backdrop: 'static', keyboard: false, modalOverflow: true });

                    if (pushState)
                        window.pushState();
                });
            }

            window.remove = function (id) {
                if (confirm("Ви впевнені що бажаєте видалити користувача? Цю дію неможливо буде відмінити!")) {
                    bsAdmin.startProcessing();

                    $.post("/uk/controlpanel/users/remove", { id: id }, function () {
                        window.getList(false);
                        bsAdmin.endProcessing();
                    });
                }
            }

            window.block = function (id) {
                bsAdmin.startProcessing();

                $.post("/uk/controlpanel/users/block", { id: id }, function () {
                    window.getList(false);
                    bsAdmin.endProcessing();
                });
            }

            window.unblock = function (id) {
                bsAdmin.startProcessing();

                $.post("/uk/controlpanel/users/unblock", { id: id }, function () {
                    window.getList(false);
                    bsAdmin.endProcessing();
                });
            }

            window.resetPassword = function (id) {
                if (confirm("Ви впевнені що бажаєте скинути пароль користувача? Новий пароль буде надіслано на його email!")) {
                    bsAdmin.startProcessing();

                  
                        $('body').modalmanager('loading');

                        window.divEdit.find(".modal-body").load("/uk/controlpanel/users/resetpassword", { id: id }, function () {
                            window.divEdit.modal({ backdrop: 'static', keyboard: false, modalOverflow: true });
                            bsAdmin.endProcessing();
                        });
                   
                }
            }

            window.createListState = function () {
                window.currentState = {};

                $(".filter-input").each(function () {
                    var t = $(this);

                    if (t.val()) {
                        window.currentState[t.attr("name").toLowerCase()] = t.val();
                    }
                });

                return window.currentState;
            }

            window.createEditState = function (id) {
                window.currentState = { id: id };
                return window.currentState;
            }
        }());
    </script>

    <script>
        $(function () {
            window.getList();

            if (window.currentState.id != undefined) 
                window.getEdit();
            
            $(document).on("click", ".nav-link", function (e) {
                e.preventDefault();
                var t = $(this);

                switch (t.data("action")) {
                    case "edit":
                        window.createEditState(t.data("id") || "0");
                        window.getEdit();
                        break;
                    case "remove":
                        window.remove(t.data("id"));
                        break;
                    case "block":
                        window.block(t.data("id"));
                        break;
                    case "unblock":
                        window.unblock(t.data("id"));
                        break;
                    case "reset-password":
                        window.resetPassword(t.data("id"));
                        break;
                    default:
                        $("#hPage").val("1");

                        if ($(this).data("page") && $(this).data("page") != window.currentState.page)
                            $("#hPage").val($(this).data("page"));

                        if (($(this).data("item-state") || $(this).data("item-state") == 0) && $(this).data("item-state") != window.currentState.itemstate)
                            $("#hItemState").val($(this).data("item-state"));

                        if ($(this).data("sort-by") && $(this).data("sort-by") != window.currentState.sortby) {
                            $(this).parents(".dropdown").find("span").text($(this).text());
                            $("#hSortBy").val($(this).data("sort-by"));
                        }

                        if (($(this).data("sort-dir") || $(this).data("sort-dir") == 0)) {
                            if ($(this).data("sort-dir") == 1) {
                                $(this).data("sort-dir", 0).find(".fa").removeClass("fa-sort-amount-desc").addClass("fa-sort-amount-asc");
                            } else {
                                $(this).data("sort-dir", 1).find(".fa").removeClass("fa-sort-amount-asc").addClass("fa-sort-amount-desc");
                            }

                            $("#hSortDirection").val($(this).data("sort-dir"));
                        }

                        window.createListState();
                        window.getList();
                        break;
                }
            });
         
            $(window).on("popstate", function (e) {
                var state = e.originalEvent.state;
                window.currentState = state;

                if (window.currentState.id) {
                    window.getEdit(false);
                } else {
                    window.getList(false);
                }
            });
        });
    </script>
}
